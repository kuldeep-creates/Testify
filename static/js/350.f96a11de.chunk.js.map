{"version":3,"file":"static/js/350.f96a11de.chunk.js","mappings":"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","sources":["components/Account/Account.js"],"sourcesContent":["import { doc, getDoc, setDoc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useFirebase } from '../../context/FirebaseContext';\nimport { db } from '../../firebase';\n\nfunction Account() {\n  const navigate = useNavigate();\n  const { user, userDoc, loading } = useFirebase();\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    year: '',\n    branch: '',\n    domain: '',\n  });\n\n  useEffect(() => {\n    if (!loading) {\n      if (!user) {\n        navigate('/login');\n        return;\n      }\n      setForm({\n        name: userDoc?.name || user?.displayName || '',\n        email: userDoc?.email || user?.email || '',\n        mobile: userDoc?.mobile || userDoc?.phone || '',\n        year: userDoc?.year || '',\n        branch: userDoc?.branch || '',\n        domain: userDoc?.domain || '',\n      });\n    }\n  }, [loading, user, userDoc, navigate]);\n\n  const save = async () => {\n    if (!user) {return;}\n    setSaving(true);\n    setError('');\n    setSuccess('');\n    try {\n      const ref = doc(db, 'user', user.uid);\n      const payload = {\n        name: form.name?.trim() || '',\n        email: form.email?.trim() || user.email || '',\n        mobile: form.mobile?.trim() || '',\n        year: form.year?.trim() || '',\n        branch: form.branch?.trim() || '',\n        domain: form.domain?.trim() || '',\n        updatedAt: serverTimestamp(),\n      };\n\n      // Make sure document exists, then update\n      const snap = await getDoc(ref);\n      if (!snap.exists()) {\n        await setDoc(ref, {\n          userId: user.uid,\n          role: userDoc?.role || 'candidate',\n          blocked: false,\n          createdAt: serverTimestamp(),\n          ...payload,\n        }, { merge: true });\n      } else {\n        await updateDoc(ref, payload);\n      }\n\n      setSuccess('Account updated successfully.');\n    } catch (e) {\n      console.error('Failed to save account:', e);\n      setError(e.message || 'Failed to update account.');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const userRole = (userDoc?.role || 'candidate').toLowerCase();\n  const isHead = userRole === 'head';\n  const isAdmin = userRole === 'admin';\n  const isCandidate = userRole === 'candidate';\n\n  if (loading) {\n    return (\n      <div style={{ padding: 24 }}>\n        Loading account...\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ padding: 24, maxWidth: 720, margin: '0 auto' }}>\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: 16 }}>\n        <div>\n          <h2 style={{ margin: 0 }}>My Account</h2>\n          <div style={{ color: '#6b7280' }}>Update your profile information</div>\n          \n        </div>\n        <button className=\"btn btn-outline\" onClick={() => navigate('/dashboard')}>Back</button>\n        \n      </div>\n\n      {error && (\n        <div className=\"alert alert-error\" style={{ marginBottom: 12 }}>{error}</div>\n      )}\n      {success && (\n        <div className=\"alert alert-success\" style={{ marginBottom: 12 }}>{success}</div>\n      )}\n\n      <div className=\"form-group\">\n        <label>Name</label>\n        <input\n          name=\"name\"\n          value={form.name}\n          onChange={onChange}\n          className=\"form-input\"\n          placeholder=\"Your name\"\n          type=\"text\"\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label>Email</label>\n        <input\n          name=\"email\"\n          value={form.email}\n          onChange={onChange}\n          className=\"form-input readonly\"\n          type=\"email\"\n          readOnly\n          title=\"Email can't be changed\"\n        />\n      </div>\n\n      <div className=\"form-row\" style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 12 }}>\n        <div className=\"form-group\">\n          <label>Mobile</label>\n          <input\n            name=\"mobile\"\n            value={form.mobile}\n            onChange={onChange}\n            className=\"form-input\"\n            placeholder=\"e.g., 9876543210\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Year</label>\n          <input\n            name=\"year\"\n            value={form.year}\n            onChange={onChange}\n            placeholder=\"e.g., 3rd Year\"\n          />\n        </div>\n      </div>\n\n      {/* Show Branch field for Candidates */}\n      {isCandidate && (\n        <div className=\"form-group\">\n          <label>Branch</label>\n          <input\n            name=\"branch\"\n            value={form.branch}\n            onChange={onChange}\n            className=\"form-input\"\n            placeholder=\"e.g., Computer Science, Mechanical Engineering, Electronics\"\n          />\n          <div className=\"form-help\">Your academic branch or specialization</div>\n        </div>\n      )}\n\n      {/* Show Domain field for Heads (assigned by admin) */}\n      {isHead && (\n        <div className=\"form-group\">\n          <label>Domain</label>\n          <input\n            name=\"domain\"\n            value={form.domain}\n            onChange={onChange}\n            className=\"form-input readonly\"\n            readOnly\n            title=\"Domain is assigned by admin and cannot be changed\"\n            placeholder=\"e.g., Full Stack, DSA, Frontend\"\n          />\n          <div className=\"form-help\">Your assigned domain (assigned by admin)</div>\n        </div>\n      )}\n\n      {/* Show both fields for Admins */}\n      {isAdmin && (\n        <>\n          <div className=\"form-group\">\n            <label>Branch</label>\n            <input\n              name=\"branch\"\n              value={form.branch}\n              onChange={onChange}\n              className=\"form-input\"\n              placeholder=\"e.g., Computer Science, Mechanical Engineering\"\n            />\n            <div className=\"form-help\">Your academic branch</div>\n          </div>\n          <div className=\"form-group\">\n            <label>Domain</label>\n            <input\n              name=\"domain\"\n              value={form.domain}\n              onChange={onChange}\n              className=\"form-input\"\n              placeholder=\"e.g., Full Stack, DSA, Frontend\"\n            />\n            <div className=\"form-help\">Your technical domain</div>\n          </div>\n        </>\n      )}\n\n      <div style={{ display: 'flex', justifyContent: 'flex-end', gap: 8, marginTop: 16 }}>\n        <button className={`btn btn-primary ${saving ? 'btn-loading' : ''}`} onClick={save} disabled={saving}>\n          {saving ? 'Saving...' : 'Save Changes'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Account;\n"],"names":["navigate","useNavigate","user","userDoc","loading","useFirebase","saving","setSaving","useState","error","setError","success","setSuccess","form","setForm","name","email","mobile","year","branch","domain","useEffect","displayName","phone","onChange","e","value","target","prev","_objectSpread","userRole","role","toLowerCase","isHead","isAdmin","isCandidate","_jsx","style","padding","children","_jsxs","maxWidth","margin","display","alignItems","justifyContent","marginBottom","color","className","onClick","placeholder","type","readOnly","title","gridTemplateColumns","gap","_Fragment","marginTop","concat","async","_form$name","_form$email","_form$mobile","_form$year","_form$branch","_form$domain","ref","doc","db","uid","payload","trim","updatedAt","serverTimestamp","getDoc","exists","updateDoc","setDoc","userId","blocked","createdAt","merge","console","message","disabled"],"sourceRoot":""}